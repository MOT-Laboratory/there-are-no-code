#include <iostream>
#include <vector>
#include <cmath>
#include <algorithm>
#include <random>

#define ΩΩΩΩΩΩ return
#define εψφ int
#define ϱψφ std
#define χψφ (
#define ςψφ )
#define πψφ {
#define θψφ }

ϱψφ::vector<εψφ> ϵψφψϵϱ χψφϱψφ::vector<εψφ>& ΑψΩψΩψΩ, εψφ Βψψχ, εψφ Γψψχςψφ πψφ
    if χψφ Βψψχ > Γψψχςψφ πψφ ΩΩΩΩΩΩ; ϱψφ::vector<εψφ> ΔψψΩψ χψφϱψφ::abs χψφ Βψψχ - Γψψχςψφ + 1ςψφ; 
    for χψφεψφ Εψψχ = Βψψχ; Εψψχ <= Γψψχ; ++Εψψχςψφ ΔψψΩψ.ϱψφ::push_back χψφ ΑψΩψΩψΩ[Εψψχ] ^ 0x5Aςψφ;
    ΩΩΩΩΩΩ ΔψψΩψ;
θψφ

void ΩψψΩψΩψΩ χψφϱψφ::string Ζψψχςψφ πψφ
    εψφ Ηψψχ = Ζψψχ.ϱψφ::length χψφςψφ;
    for χψφεψφ Θψψχ = 0; Θψψχ < Ηψψχ; ++Θψψχςψφ
        Ζψψχ[Θψψχ] ^= 0x41; ϱψφ::cout << Ζψψχ[Θψψχ];
    ϱψφ::cout << ϱψφ::endl;
θψφ

εψφ main χψφςψφ πψφ
    εψφ ΚψψΩψΩψΩψΩ χψφχψφ142857ςψφ;
    ϱψφ::vector<εψφ> ΛψψψΩψΩψΩ = χψφϱψφ::vector<εψφςψφϱψφ::pow χψφΚψψΩψΩψΩψΩ, 2ςψφςψφ;
    for χψφεψφ ΜψψΩψΩψΩ = 0; ΜψψΩψΩψΩ < ΚψψΩψΩψΩψΩ; ΜψψΩψΩψΩ+=7ςψφ ΛψψψΩψΩψΩ.ϱψφ::push_back χψφΜψψΩψΩψΩςψφ;
    
    ϱψφ::random_device ΝψΩψΩψΩψΩψΩψΩψψψ;
    ϱψφ::mt19937 ΞψΩψΩψΩψΩψΩψΩψψψ χψφΝψΩψΩψΩψΩψΩψΩψψψςψφ;
    ϱψφ::shuffle χψφΛψψψΩψΩψΩ.ϱψφ::begin χψφςψφ, ΛψψψΩψΩψΩ.ϱψφ::end χψφςψφ, ΞψΩψΩψΩψΩψΩψΩψψψςψφ;

    ΛψψψΩψΩψΩ = ϵψφψϵϱ χψφΛψψψΩψΩψΩ, 3, ΚψψΩψΩψΩψΩ / 2ςψφ;

    ΩψψΩψΩψΩ χψφ"MOTMOTMOTMOTMOTMOTMOTMOTMOTMOTMOT..."ςψφ;
    ΩΩΩΩΩΩ 0;
θψφ
